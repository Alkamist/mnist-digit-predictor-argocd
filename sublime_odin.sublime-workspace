{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"get",
				"getEnvBool"
			],
			[
				"int",
				"parse_int(s: string, base := 0, n: ^int = nil) -> (value: int, ok: bool)"
			],
			[
				"env",
				"get_env"
			],
			[
				"clone",
				"clone_to_cstring(s: string, allocator := context.allocator, loc := #caller_location) -> (res: cstring, err: mem.Allocator_Error)"
			],
			[
				"unm",
				"unmarshal(data: []byte, ptr: ^$T, spec := DEFAULT_SPECIFICATION, allocator := context.allocator) -> Unmarshal_Error"
			],
			[
				"console_lo",
				"create_console_logger(lowest := Level.Debug, opt := Default_Console_Logger_Opts, ident := \"\", allocator := context.allocator) -> Logger"
			],
			[
				"Corr",
				"CORRELATION_ID"
			],
			[
				"W",
				"Windows"
			],
			[
				"defaul",
				"default_context() -> Context"
			],
			[
				"default",
				"default_context() -> Context"
			],
			[
				"c",
				"caller_location"
			],
			[
				"read",
				"init_reader(reader: ^Reader, data: string, copy_allocator: runtime.Allocator)"
			],
			[
				"Pack",
				"PacketFlags"
			],
			[
				"Mess",
				"Message_Kind"
			],
			[
				"Sta",
				"State_VTable"
			],
			[
				"op",
				"optional_allocator_error"
			],
			[
				"Allocator_",
				"Allocator_Error"
			],
			[
				"All",
				"Allocator"
			],
			[
				"valu",
				"value_backing"
			],
			[
				"bar",
				"bar_ptr_copy"
			],
			[
				"strin",
				"string_builder"
			],
			[
				"soa",
				"soa_kind"
			],
			[
				"ar",
				"arena_allocator(arena: ^Arena) -> Allocator"
			],
			[
				"Type",
				"Type_Info_Struct"
			],
			[
				"T",
				"(Type_Info_Map)"
			],
			[
				"some",
				"some_ignored"
			],
			[
				"s",
				"soa_kind"
			],
			[
				"quaternion",
				"quaternion128"
			],
			[
				"set",
				"set_union_variant_typeid(a: any, id: typeid)"
			],
			[
				"type_is",
				"type_is_union($T: typeid) -> bool"
			],
			[
				"Op",
				"Options_Set"
			],
			[
				"cop",
				"copy_allocator"
			],
			[
				"to_s",
				"to_stream(b: ^Builder) -> res: io.Stream"
			],
			[
				"key",
				"key_backing"
			],
			[
				"Loca",
				"Source_Code_Location"
			],
			[
				"optio",
				"optional_allocator_error"
			],
			[
				"ele",
				"elem_size"
			],
			[
				"slice",
				"slice_ptr(ptr: ^$T, len: int) -> []T"
			],
			[
				"sli",
				"slice_ptr(ptr: ^$T, len: int) -> []T"
			],
			[
				"call",
				"caller_location"
			],
			[
				"marshal",
				"marshal(..)"
			],
			[
				"ene_",
				"_enet_counter"
			],
			[
				"but",
				"button_presses"
			],
			[
				"User",
				"User_Input"
			],
			[
				"to",
				"to_world_space(window: ^Window, position: [2]f32) -> [2]f32"
			],
			[
				"draw_",
				"draw_sprite(window: ^Window, position: [2]f32, frame_position: [2]f32, frame_size: [2]f32, offset := [2]f32{0, 0}, rotation := f32(0), color := [4]u8{255, 255, 255, 255})"
			],
			[
				"current",
				"GetCurrentContext() -> WindowHandle"
			],
			[
				"load",
				"loaded_up_to"
			],
			[
				"input_",
				"input_mouse_press(window: ^Window, button: Mouse_Button)"
			],
			[
				"draw",
				"draw_rectangle(renderer: ^Renderer, position: [2]f32, size: [2]f32, offset := [2]f32{0, 0}, rotation := f32(0), color := [4]u8{255, 255, 255, 255})"
			],
			[
				"Event_",
				"osw.Event_Cursor_Move"
			],
			[
				"Window_Event_M",
				"Window_Event_Cursor_Move"
			],
			[
				"WIndo",
				"Window_Event"
			],
			[
				"ti",
				"selection"
			],
			[
				"pla",
				"palette"
			],
			[
				"Tile",
				"Tile_Palette"
			],
			[
				"r",
				"ring_buffer"
			],
			[
				"Comm",
				"Command_Draw_Line"
			],
			[
				"get_til",
				"get_tileset_tile(tileset: Tileset, index: [2]int) -> (res: Tile, ok: bool)"
			],
			[
				"pal",
				"palette_is_open"
			],
			[
				"cur",
				"cursor_position(input: ^Input) -> [2]f32"
			],
			[
				"drw",
				"draw_tile_selection(renderer: ^render_2d.Renderer, selection: Tile_Selection, tile_size: [2]f32, is_local: bool)"
			],
			[
				"rend",
				"renderer_out"
			],
			[
				"previou",
				"previous_color_channels"
			],
			[
				"co",
				"enabled_color_channels"
			],
			[
				"pl",
				"palette_open"
			],
			[
				"w",
				"world_cursor_position(window: ^Window) -> [2]f32"
			],
			[
				"destroy",
				"destroy_tilemap(tilemap: Tilemap)"
			],
			[
				"backend_set",
				"backend_set_cursor_style(window: ^Window, style: Cursor_Style)"
			],
			[
				"pre",
				"previous_world_cursor_position"
			],
			[
				"Win",
				"Window_Context"
			],
			[
				"ma",
				"MakeContextCurrent(window: WindowHandle)"
			],
			[
				"Window",
				"Window_Context"
			],
			[
				"Back",
				"Backend_Window_Context"
			],
			[
				"_defaul",
				"_default_fragment_source"
			],
			[
				"backend_desto",
				"backend_destroy_shader(shader: Shader)"
			],
			[
				"backend_load",
				"backend_load_shader(vertex_source, fragment_source: string) -> (shader: Shader, ok: bool)"
			],
			[
				"input",
				"input_cursor_position(input: ^Input, position: [2]f32)"
			],
			[
				"Swap",
				"SwapBuffers(window: WindowHandle)"
			],
			[
				"load_",
				"load_white_pixel() -> (texture: Texture, ok: bool)"
			],
			[
				"INCR",
				"INCR_WRAP"
			],
			[
				"EQUA",
				"LEQUAL"
			],
			[
				"Sten",
				"Stencil_Test_Proc"
			],
			[
				"player_but",
				"player_button_down(player: Player, button: Player_Button, lookback := 0) -> bool"
			],
			[
				"draw_re",
				"draw_rectangle_outline(window: ^Window, position: [2]f32, size: [2]f32, offset := [2]f32{0, 0}, rotation := f32(0), color := [4]u8{255, 255, 255, 255}, thickness := f32(1))"
			],
			[
				"draw_text",
				"draw_shadowed_text(window: ^Window, text: string, position: [2]f32, color := [4]u8{255, 255, 255, 255})"
			],
			[
				"remove",
				"unordered_remove(array: ^$D/[dynamic]$T, index: int, loc := #caller_location)"
			],
			[
				"append",
				"append_draw_call_if_needed(window: ^Window)"
			],
			[
				"update",
				"update_window_renderer(window: ^Window)"
			],
			[
				"destroy_window",
				"destroy_window_input(window: ^Window)"
			],
			[
				"backend_window_is",
				"backend_window_is_hovered(window: ^Window) -> bool"
			],
			[
				"backend_windo",
				"backend_window_is_focused(window: ^Window) -> bool"
			],
			[
				"backend_set_window",
				"backend_set_window_mode(window: ^Window, mode: Window_Mode)"
			],
			[
				"backendse",
				"backend_set_window_title(window: ^Window, title: string)"
			],
			[
				"init_wi",
				"init_window_input(window: ^Window, allocator := context.allocator)"
			],
			[
				"cursor",
				"cursor_position"
			],
			[
				"curso",
				"cursor_position"
			],
			[
				"tile_sele",
				"tile_selection_bounds(selection: Tile_Selection) -> left, right, bottom, top: int"
			],
			[
				"game_copy",
				"game_copy_state(to, from: ^Game_State)"
			],
			[
				"texture",
				"texture_load_and_pad_tiles_from_file_data(data: []byte, tile_size: [2]int) "
			],
			[
				"byte",
				"byte_index"
			],
			[
				"tile",
				"tile_index"
			],
			[
				"text",
				"texture_load_from_file(file_name: string) "
			],
			[
				"game_button",
				"game_button_pressed(g: ^Game_State, id: Player_Id, button: Game_Button, buffer_frames := MAX_GAME_INPUT_BUFFER_FRAMES) "
			],
			[
				"circle_",
				"circle_edge_point(circle: Circle, index, slot_count: int) "
			],
			[
				"player_team",
				"game_player_team_index(g: ^Game_State, id: Player_Id) "
			],
			[
				"game_play",
				"game_player_collider(g: ^Game_State, id: Player_Id) "
			],
			[
				"das",
				"dash_timer"
			],
			[
				"dash",
				"dash_speed"
			],
			[
				"game_upd",
				"game_update_audio(g_, g: ^Game_State, audio: ^Game_Audio, camera: Camera)"
			],
			[
				"game_pla",
				"game_player_audio(audio: ^Game_Audio, id: Player_Id) "
			],
			[
				"hit",
				"hitlag_remaining"
			],
			[
				"tick",
				"tick_since(start: Tick) "
			],
			[
				"enum",
				"enum_field_values(Enum_Type: typeid) "
			],
			[
				"opti",
				"optional_allocator_error"
			],
			[
				"serializer_init",
				"serializer_init_writer(s: ^Serializer, capacity: int = 1024, allocator := context.allocator, loc := #caller_location) "
			],
			[
				"seria",
				"serializer_data(s: Serializer) "
			],
			[
				"play",
				"player_id"
			],
			[
				"p",
				"player_id"
			],
			[
				"lo",
				"local_id"
			],
			[
				"game_set_",
				"game_set_player_class(g: ^Game_State, id: Player_Id, class: Player_Class)"
			],
			[
				"game_ad",
				"game_advance_tile_editor(g: ^Game_State, id: Player_Id, fixed_delta: f32)"
			],
			[
				"TILE",
				"TILEMAP_WIDTH"
			],
			[
				"fix",
				"fixed_timestep(step: ^Fixed_Timestep, fixed_delta: f32) "
			],
			[
				"roll",
				"rolling_f32_average(rolling: Rolling_f32($N)) "
			],
			[
				"Game_Message_Frame",
				"Game_Message_Frame_Request"
			],
			[
				"fra",
				"frame_offset"
			],
			[
				"game_stat",
				"game_state_copy(to, from: ^Game_State)"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: rabbitmq-staging\n  namespace: argocd\n  annotations:\n    # Use sync-wave 1 for dependencies. This ensures it's deployed first.\n    argocd.argoproj.io/sync-wave: \"1\" \nspec:\n  project: default\n\n  source:\n    repoURL: https://charts.bitnami.com/bitnami\n    targetRevision: 14.x.x # Pin to a specific chart version\n    chart: rabbitmq\n    helm:\n      # Example of overriding default values\n      values: |\n        replicaCount: 1\n        auth:\n          username: user\n          password: password-secret\n          existingPasswordSecret: \"\" # Use this if you have a pre-existing secret\n          \n  destination:\n    server: https://kubernetes.default.svc\n    namespace: staging-dependencies # Deploy RabbitMQ into this namespace\n    \n  syncPolicy:\n    automated:\n      prune: true\n      selfHeal: true\n    syncOptions:\n      - CreateNamespace=true",
			"file": "apps/rabbit-mq-app.yaml",
			"file_size": 947,
			"file_write_time": 134064066323149405,
			"settings":
			{
				"buffer_size": 912,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAA7AMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABQAAAAIyBUaGlzIEFwcGxpY2F0aW9uIGRlcGxveXMgdGhlIFJhYmJpdE1RIGRlcGVuZGVuY3kgdXNpbmcgdGhlIEJpdG5hbWkgSGVsbSBDaGFydC4",
					"AQAAAAAAAAABAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					2,
					"left_delete",
					null,
					"AgAAAAEAAAAAAAAAAQAAAAAAAAABAAAACgAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					2,
					"left_delete",
					null,
					"AgAAAJMDAAAAAAAAkwMAAAAAAAAHAAAAICAgICAgCpIDAAAAAAAAkgMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAmgMAAAAAAACTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAAMBAAAAAAAAAwEAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"trim",
				"Trim Trailing White Space"
			],
			[
				"Package Control: up",
				"Package Control: Upgrade All Packages"
			],
			[
				"tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"lsp",
				"LSP: Enable Language Server in Project"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"sati",
				"Package Control: Satisfy Libraries"
			],
			[
				"package",
				"Package Control: Satisfy Libraries"
			],
			[
				"satisfy",
				"Package Control: Satisfy Libraries"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"install pakc",
				"Package Control: Install Package"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"lsp enable",
				"Package Control: Advanced Enable Packages"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"l",
				"Preferences: LSP Settings"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"package ",
				"Package Control: Remove Package"
			],
			[
				"g",
				"LSP: Goto Symbol in Project"
			],
			[
				"goto",
				"LSP: Goto Symbol in Project"
			],
			[
				"rename",
				"LSP: Rename"
			],
			[
				"enable",
				"LSP: Enable Language Server in Project"
			],
			[
				"enable lsp",
				"LSP: Enable Language Server in Project"
			],
			[
				"Package Control: ",
				"Package Control: Upgrade Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"glsl",
				"Package Control: Install Package"
			],
			[
				"title",
				"Convert Case: Title Case"
			],
			[
				"snake",
				"Convert Case: snake_case"
			],
			[
				"case",
				"Convert Case: Title Case"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"match",
				"Jump to Matching Bracket"
			],
			[
				"tr",
				"Trim Trailing White Space"
			],
			[
				"select",
				"Selection: Expand to Word"
			],
			[
				"tri",
				"Trim Trailing White Space"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"camel",
				"Convert Case: UpperCamelCase"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"trimtr",
				"Trim Trailing White Space"
			],
			[
				"scheme",
				"UI: Select Color Scheme"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"color sc",
				"UI: Select Color Scheme"
			],
			[
				"color s",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"align",
				"Preferences: Alignment Key Bindings – Default"
			],
			[
				"find",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"split",
				"File: Split View"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"color",
				"Color Helper: Edit and Mix"
			],
			[
				"schee",
				"UI: Select Color Scheme"
			],
			[
				"shceme",
				"UI: Select Theme"
			],
			[
				"sublime",
				"Colorsublime: Install Theme"
			],
			[
				"colorsu",
				"Colorsublime: Install Theme"
			],
			[
				"package remo",
				"Package Control: Remove Package"
			],
			[
				"colo",
				"UI: Select Color Scheme"
			],
			[
				"select color",
				"UI: Select Color Scheme"
			],
			[
				"ui",
				"UI: Select Theme"
			],
			[
				"preferences",
				"Preferences: Browse Packages"
			],
			[
				"lsp e",
				"LSP: Enable Language Server in Project"
			],
			[
				"menu",
				"View: Toggle Menu"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 561.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/corey/Documents/digit-image-predictor-argo",
		"/C/Users/corey/Documents/digit-image-predictor-argo/apps"
	],
	"file_history":
	[
		"/C/Users/corey/Documents/digit-image-predictor-argo/argocd-config.yaml",
		"/C/Users/corey/Documents/digit-image-predictor/helm-chart/templates/worker.yaml",
		"/C/Users/corey/Documents/digit-image-predictor/helm-chart/templates/server.yaml",
		"/C/Users/corey/Documents/digit-image-predictor/helm-chart/values.yaml",
		"/C/Users/corey/Documents/digit-image-predictor/push.bat",
		"/C/Users/corey/Documents/digit-image-predictor/build.bat",
		"/C/Users/corey/Documents/digit-image-predictor/server/main.go",
		"/C/Users/corey/Documents/digit-image-predictor/frontend/index.html",
		"/C/Users/corey/Documents/digit-image-predictor/worker/main.odin",
		"/C/Users/corey/Documents/digit-image-predictor/rabbitmq-instance.yaml",
		"/C/Users/corey/Documents/digit-image-predictor/helm-chart/Chart.yaml",
		"/C/Users/corey/Documents/digit-image-predictor/helm-chart/templates/rabbitmq.yaml",
		"/C/Users/corey/Documents/digit-image-predictor/worker/Dockerfile",
		"/C/Users/corey/Documents/digit-image-predictor/helm-chart/deployment.yaml",
		"/C/Users/corey/Documents/OdinStuff/digit-predictor/deployment.yaml",
		"/C/Users/corey/Documents/OdinStuff/digit-predictor/worker/main.odin",
		"/C/Users/corey/Documents/OdinStuff/digit-predictor/model-loader/Dockerfile",
		"/C/Users/corey/Documents/OdinStuff/digit-predictor/worker/Dockerfile",
		"/C/Users/corey/Documents/OdinStuff/digit-predictor/build.bat",
		"/C/Users/corey/Documents/OdinStuff/digit-predictor/startup.bat",
		"/C/Users/corey/Documents/OdinStuff/mnist-digit-predictor/.gitignore",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/deployment.yaml",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/mnist-predictor-server/main.go",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/mnist-predictor-frontend/index.html",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/shutdown.bat",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/test/main.go",
		"/C/Users/corey/Documents/GoStuff/go-mlp/client/client.go",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/mnist-predictor-worker/main.odin",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/mnist-predictor-worker/ml/ml.odin",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/startup.bat",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/mnist-predictor-worker/Dockerfile.model-loader",
		"/C/Users/corey/Documents/OdinStuff/machine_learning/examples/mnist/main.odin",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/mnist-predictor-worker/rabbitmq/amqp.odin",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/test.bat",
		"/C/odin/core/log/log.odin",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/mnist-predictor-server/Dockerfile",
		"/C/Users/corey/Documents/GoStuff/kubernetes-test/receive/main.go",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/mnist-predictor-server/go.mod",
		"/C/Users/corey/Documents/GoStuff/kubernetes-test/receive/go.mod",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/check.bat",
		"/C/Users/corey/Documents/OdinStuff/digit_prediction_app/go-rest-api/main.go",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/go-rest-api/Dockerfile",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/go-rest-api/go.mod",
		"/C/Users/corey/Documents/GoStuff/kubernetes-test/send/go.mod",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/go-rest-api/main.go",
		"/C/Users/corey/Documents/GoStuff/kubernetes-test/deployment.yaml",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/server/main.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/server/rabbitmq/amqp.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/receive/Dockerfile",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/receive/main.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/receive/rabbitmq/amqp.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/send/main.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/rabbitmq/amqp.odin",
		"/?wsl.localhost/Ubuntu/home/corey/vcpkg/packages/librabbitmq_x64-linux/debug/lib/pkgconfig/librabbitmq.pc",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/rabbitmq2/main.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/rabbitmq2/rabbitmq/amqp.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/src/main.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test/Dockerfile",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test/odin-lang/Dockerfile",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/src/odin-http/server.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/src/odin-http/status.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/src/odin-http/handlers.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test/digit-classifier-server/main.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/src/rabbitmq/amqp.odin",
		"/C/Users/corey/Documents/OdinStuff/odin_ggml/ggml/ggml.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/src_/main.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/src_/rabbitmq/amqp.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/src/rabbitmq/tcp_socket.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/odin_test/main.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/odin_test/rabbitmq/amqp.odin",
		"/C/Users/corey/Downloads/rabbitmq-c/include/rabbitmq-c/amqp.h",
		"/C/Users/corey/Downloads/rabbitmq-c/include/rabbitmq-c/tcp_socket.h",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/odin_test/rabbitmq/tcp_socket.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/odin_test/rabbitmq/ssl_socket.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/sublime_odin.sublime-project",
		"/C/Users/corey/Downloads/rabbitmq-c/include/amqp_tcp_socket.h",
		"/C/Users/corey/Documents/OdinStuff/OLD/pugl_odin/pugl.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/odin-test/main.odin",
		"/C/Users/corey/Documents/OdinStuff/odin-c-bindgen/rabbitmq/config.sjson",
		"/C/Users/corey/Documents/OdinStuff/odin-c-bindgen/rabbitmq/rabbitmq/amqp.odin",
		"/C/Users/corey/Documents/OdinStuff/odin-c-bindgen/include/include/amqp_ssl_socket.odin",
		"/C/Users/corey/Documents/OdinStuff/odin-c-bindgen/include/include/amqp_framing.odin",
		"/C/Users/corey/Documents/OdinStuff/odin-c-bindgen/include/include/amqp.odin",
		"/C/Users/corey/Downloads/odin-c-bindgen/libclang/CXFile.odin",
		"/C/Users/corey/Documents/GoStuff/kubernetes-test/send/main.go",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/odin-test/Dockerfile",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test/ml/ml.odin",
		"/C/odin/core/log/file_console_logger.odin",
		"/C/Users/corey/Documents/OdinStuff/kubernetes_test2/odin-lang/Dockerfile",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serializer/serializer.odin",
		"/C/odin/base/runtime/dynamic_map_internal.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/main.odin",
		"/C/odin/base/intrinsics/intrinsics.odin",
		"/C/odin/base/runtime/core_builtin.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serializer/tests.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/rollback/networking.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/rollback/server.odin",
		"/C/odin/vendor/ENet/enet.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing - Copy (2)/src/rollback.odin",
		"/C/odin/core/strings/builder.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing - Copy (2)/src/serialization.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/rollback/fixed_timestep.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/rollback/server_thread.odin",
		"/C/Users/corey/Documents/OdinStuff/asdf/tests.odin",
		"/C/odin/base/runtime/core_builtin_soa.odin",
		"/C/odin/core/reflect/reflect.odin",
		"/C/odin/base/runtime/core.odin",
		"/C/odin/core/math/fixed/fixed.odin",
		"/C/odin/core/testing/testing.odin",
		"/C/odin/core/io/io.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serialization/serializer.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serialization/deserializer.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serialization/serializer - Copy.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serialization/common.odin",
		"/C/odin/core/bufio/reader.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serialization/reader.odin",
		"/C/odin/core/strings/reader.odin",
		"/C/odin/core/io/conv.odin",
		"/C/odin/core/os/stream.odin",
		"/C/odin/core/sys/wasm/js/memory_js.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serialization/writer.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serializer/reader.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serializer/writer.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serializer/serializer - Copy.odin",
		"/C/odin/core/mem/mem.odin",
		"/C/Users/corey/Documents/OdinStuff/game_testing/src/serialization.odin",
		"/C/odin/core/strconv/strconv.odin",
		"/C/odin/core/strconv/integers.odin"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 121.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"host",
			"HOST",
			"PORT",
			".Values.appName",
			"conn",
			"initRabbitMQ",
			"REQUEST_QUEUE_NAME",
			"CHANNEL_ID",
			"PORT",
			"HOST",
			"time",
			"PredictionResponse",
			"channel_id",
			"PredictionResponse",
			"PredictionRequest",
			"predictionTimeout",
			"requestQueueName",
			"rabbitMQURL",
			"amqpChan",
			"amqpConn",
			"localdev",
			"field_value_t",
			"conn",
			"c",
			"basic_properties_t_",
			"VERSION",
			"VERSION_MAJOR24",
			"slice",
			"alloc_bytes",
			"free_all",
			"temp_allocator",
			"_ignore_type_by_default",
			"deserialize",
			"serialize",
			"_serialize",
			"_serialize_any",
			"delete",
			"make",
			"read_allocator",
			"map_kvh_data_dynamic",
			"_parapoly_serialize_basic_as",
			"_parapoly_serialize_basic",
			"io",
			"caller_location",
			"serializer",
			"io.Writer",
			"writer",
			"Writer",
			"writer",
			"context",
			"deserializeer",
			"read",
			"serializer",
			"write",
			"serialize",
			"Serializer",
			"s",
			"serialize",
			"Serializer",
			"s",
			"_serialize_number",
			"_serialize_basic",
			"_serialize_basic_as",
			"info",
			"serialize_ptr_as",
			"num_items",
			"_serialize_slice_info",
			"_serialize_opaque_as",
			"_serialize_opaque",
			"Player_Input",
			"MAX_PLAYERS",
			"Player_Id",
			"player_ids",
			"MAX_PLAYERS",
			"_get_user",
			"Frame",
			"Player_Input",
			"Player_Id",
			"player_ids",
			"Player",
			"player",
			"Input",
			"input",
			"Window",
			"window",
			"Input",
			"input",
			"window",
			"Window",
			"window",
			"Window",
			"MakeContextCurrent",
			"Renderer",
			"renderer",
			"Renderer",
			"renderer",
			"Renderer",
			"renderer",
			"Input",
			"input",
			"window",
			"Backend_Window_Context",
			"Window_Context",
			" \"contextless\" ",
			"Window_Context",
			"ctx",
			"Context",
			"buf",
			"rolling",
			"Command_Set",
			"tilemap",
			"tileset",
			"window",
			"current_window()",
			"window",
			"Cursor_Style",
			"draw_tile_selection_highlight",
			"defer",
			"palette_open",
			"tile_selection_bounds",
			"cycle",
			"window",
			"MakeContextCurrent",
			"renderer.texture",
			"enabled_colors",
			"Enabled_Colors",
			"current_font",
			"window"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			".Release.Name",
			"connection",
			"CHANNEL_ID",
			"Prediction_Response",
			"Prediction_Request",
			"channel",
			"connection",
			"allocator",
			"serialize",
			"_serialize_any",
			"_serialize",
			"copy_allocator",
			"_serialize_basic_as",
			"_serialize_basic",
			"s",
			"Serializer",
			"serializer",
			"Stream",
			"stream",
			"reader",
			"deserialize",
			"writer",
			"serialize",
			"write",
			"Writer",
			"writer",
			"read",
			"Reader",
			"reader",
			"_parapoly_serialize_number",
			"_parapoly_serialize_basic",
			"_parapoly_serialize_basic_as",
			"serialize_basic_as",
			"item_count",
			"serialize_ptr_as",
			"serialize_ptr",
			"User_Input",
			"MAX_USERS",
			"User_Id",
			"user_ids",
			"MAX_USERS",
			"Rollback_Frame",
			"User_Input",
			"User_Id",
			"user_ids",
			"User",
			"user",
			"Gui",
			"gui",
			"Input",
			"input",
			"Window",
			"window",
			"renderer",
			"Renderer",
			"Input",
			"input",
			"Gui",
			"Window",
			"window",
			"Window",
			"window",
			"Window",
			"window",
			"Window",
			"window",
			"ctx",
			"Backend_Gl_Context",
			"Gl_Context",
			"",
			"window",
			"Window",
			"buffer",
			"buf",
			"ctx",
			"palette_is_open",
			"enabled_color_channels",
			"Color_Channel_Set",
			"font",
			"renderer",
			"Input",
			"State",
			"Renderer",
			"Render_State",
			"renderer",
			"Render_State",
			"Input_State",
			"input",
			"window",
			"State",
			"current_camera",
			"Rollback_Frame",
			"time_remaining",
			"current_game",
			"",
			"window",
			"Window",
			"window",
			"Window_Input",
			"window",
			"input",
			"render",
			"state",
			"Input_State",
			"state",
			"wav_sampler_play",
			"Input",
			"State",
			"Server",
			"predicted_state",
			"g",
			"game_spawn_position",
			"game_player",
			"game_player_input",
			"game_player_button_released",
			"game_player_button_pressed",
			"game_player_button_down",
			"step",
			"Game_Server",
			"Game_Button",
			"Game_Input",
			"Input_Button",
			"Input",
			"Game_Button",
			"game_get_player",
			"game_timelines",
			"player",
			"player_input_frames"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "apps/rabbit-mq-app.yaml",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 912,
						"regions":
						{
						},
						"selection":
						[
							[
								259,
								259
							]
						],
						"settings":
						{
							"lsp_uri": "file:///C:/Users/corey/Documents/digit-image-predictor-argo/apps/rabbit-mq-app.yaml",
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 61.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.diagnostics":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.find_results":
	{
		"height": 126.0,
		"history":
		[
		]
	},
	"pinned_build_system": "sublime_odin",
	"project": "sublime_odin.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"enet",
				"vendor\\ENet\\enet.odin"
			],
			[
				"rlmath",
				"vendor\\raylib\\raymath.odin"
			],
			[
				"raymath",
				"vendor\\raylib\\raymath.odin"
			],
			[
				"strings",
				"core\\strings\\builder.odin"
			],
			[
				"intrin",
				"base\\intrinsics\\intrinsics.odin"
			],
			[
				"math",
				"core\\math\\math.odin"
			],
			[
				"gltf",
				"vendor\\cgltf\\cgltf.odin"
			],
			[
				"linalg",
				"core\\math\\linalg\\specific.odin"
			],
			[
				"cgltf",
				"vendor\\cgltf\\cgltf.odin"
			],
			[
				"linal",
				"core\\math\\linalg\\specific.odin"
			],
			[
				"raylib",
				"vendor\\raylib\\raylib.odin"
			],
			[
				"opengl",
				"vendor\\OpenGL\\helpers.odin"
			],
			[
				"raylibe",
				"vendor\\raylib\\easings.odin"
			],
			[
				"slice",
				"core\\slice\\slice.odin"
			],
			[
				"mem",
				"core\\mem\\mem.odin"
			],
			[
				"cglt",
				"vendor\\cgltf\\cgltf.odin"
			],
			[
				"core image",
				"core\\image\\general.odin"
			],
			[
				"helpers",
				"vendor\\OpenGL\\helpers.odin"
			],
			[
				"helper",
				"vendor\\OpenGL\\helpers.odin"
			],
			[
				"ra",
				"vendor\\raylib\\raylib.odin"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 275.0,
		"last_filter": "reserve_soa",
		"selected_items":
		[
			[
				"reserve_soa",
				"reserve_soa"
			],
			[
				"make_soa",
				"make_soa_dynamic_array"
			],
			[
				"make_s",
				"make_soa"
			],
			[
				"delete_soa",
				"delete_soa_dynamic_array"
			],
			[
				"raw_soa_footer",
				"raw_soa_footer"
			],
			[
				"make_",
				"make_soa"
			],
			[
				"map_set",
				"__dynamic_map_set"
			],
			[
				"map_kv",
				"map_kvh_data_values_dynamic"
			],
			[
				"map_kl",
				"map_kvh_data_values_dynamic"
			],
			[
				"struct_tag",
				"struct_tag_get"
			],
			[
				"update_game",
				"update_game"
			],
			[
				"player_state",
				"Player_State"
			],
			[
				"init_input",
				"init_window_input"
			],
			[
				"draw_tilem",
				"draw_tilemap"
			],
			[
				"camera",
				"Camera"
			],
			[
				"draw_game",
				"draw_game"
			],
			[
				"draw_spri",
				"draw_sprite"
			],
			[
				"draw_",
				"draw_icon"
			],
			[
				"draw_spr",
				"draw_sprite"
			],
			[
				"get_sta",
				"get_stagger"
			],
			[
				"Class_Audio",
				"Class_Audio"
			],
			[
				"draw_heal",
				"draw_health_bar"
			],
			[
				"draw_hud",
				"draw_hud"
			],
			[
				"draw_tile",
				"draw_tile_edit_visuals"
			],
			[
				"model",
				"Model"
			],
			[
				"ptr_to",
				"ptr_to_bytes"
			],
			[
				"data_cast",
				"slice_data_cast"
			],
			[
				"Camera",
				"Camera3D"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 658.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
